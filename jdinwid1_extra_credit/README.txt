My script does two things: it provides a list of songs available in the database, and it allows the user to search for a song title and get more information about the song.  It provides the name of the song, price, album it came from, composer, and genre.  Unfortunately, the script does require the user to add case sensitive titles.  My script does this by pulling data out of an SQLite3 Database that was created for teaching purposes on SQLiteTutorial.net (complete link in the comments).  The data that is pulled is sorted into 3 different classes, one main parent class and two child classes.  These classes are structured after the database tables provided in the database.  I implemented a while loop to add a menu for the user as well as a convenience for me, so I did not have to keep running the scripts during multiple tests.  My process for writing the script was to break each part into manageable pieces.  To give one example, I made sure the while-loop menu was working and calling the right functions before actually writing the functions.   To give another example, I made sure to implement variables as written strings before accepting user input.  This would allow me to not make a mistake entering over and over again; additionally, I reasoned that if I could not get it to work with a consistent string, how could I expect to get it to work with an inconsistent string?  Originally, I wanted to create a couple different options that could be chosen from the menu to give the program more variety; however, I found the listing of the song titles very useful later on for testing purposes.  There were a number of problems I ran into while testing this program.  First, the lack of escape characters in some of the song title data queries were crashing the program.  I do not have a lot of experience with SQL, so this one had me stuck for a while.  I was able to follow a solution on stack overflow that helped me get my query correctly formatted.  Another problem I had while testing was I realized that some songs do not have listed composers.  If I put one of those songs in the program, the entire thing would crash, but I did not know why.  I fixed this by making the composer "None" if the song did not have a composer.  If I were to have given myself a piece of valuable information before starting this project, I would have told myself to use a real Python editor.  I used the vim editor in my Arizona State University general ssh connection, and it just made my life a lot harder.  I mean, for scripts when all your coding is sequential, it is not as big of a deal.  On the other hand, when you are dealing with Object Oriented Programming, you have to reference classes and methods created at the beginning of the script.  The vim editor is not the best at scrolling up and down, coping and pasting properties, and just general editing.  With that said, I know that some people are really good with their vim commands, but I just know the basics, and it was not enough to make this editing process easy.
